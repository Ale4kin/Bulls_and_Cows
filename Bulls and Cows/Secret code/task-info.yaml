type: edu
files:
- name: src/bullscows/Main.java
  visible: true
  text: |
    package bullscows;

    import java.util.Scanner;


    public class Main {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);

            int countBulls = 0;
            int countCows = 0;

            char a = '6';
            char b = '5';
            char c = '8';
            char d = '3';

            String input = scanner.nextLine();

            int posA = input.indexOf(a);
            int posB = input.indexOf(b);
            int posC = input.indexOf(c);
            int posD = input.indexOf(d);

            if(posA == 0){
                countBulls += 1;
            }

            if (posB == 1) {
                countBulls +=1;
            }

            if (posC ==2){
                countBulls +=1;
            }

            if (posD == 3){
                countBulls +=1;
            }

            if (posA == 1 || posA == 2 || posA == 3){
                countCows +=1;
            }

            if (posB == 0 || posB == 2 || posB == 3){
                countCows +=1;
            }
            if (posC == 0 || posC == 1 || posC == 3){
                countCows += 1;
            }

            if (posD == 0 || posD == 1 || posD == 2){
                countCows +=1;
            }

            if(countCows == 0 && countBulls > 0){
                System.out.println("Grade: " + countBulls + " bull(s). The secret code is 6583. ");
            }else if (countBulls == 0 && countCows >0){
                System.out.println("Grade: " + countCows + " cow(s). The secret code is 6583.");
            } else if (countBulls == 0 && countCows == 0){
                System.out.println("Grade: None. The secret code is 6583.");

            }else{
                System.out.println("Grade: " + countBulls + "bull(s) and " + countCows + " cow(s). The secret code is 6583.");
            }



        }
    }
  learner_created: false
- name: test/BullsCowsTest.java
  visible: false
  text: |-
    import bullscows.Main;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.LinkedHashSet;
    import java.util.List;
    import java.util.stream.Collectors;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    public class BullsCowsTest extends StageTest<String> {

        // basic test case
        @DynamicTestingMethod
        CheckResult test1() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("4").toLowerCase().trim();

            return outputCheck(output, 4);
        }

        @DynamicTestingMethod
        CheckResult test2() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("1").toLowerCase().trim();

            return outputCheck(output, 1);
        }

        // test of incorrect input
        @DynamicTestingMethod
        CheckResult test4() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("11").toLowerCase().trim();

            return outputCheck(output, 11);
        }

        @DynamicTestingMethod
        CheckResult test5() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("6").toLowerCase().trim();

            return outputCheck(output, 6);
        }

        @DynamicTestingMethod
        CheckResult test6() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("3").toLowerCase().trim();

            return outputCheck(output, 3);
        }


        CheckResult outputCheck(String source, int length) {

            if (length > 10) {
                if (source.toLowerCase().contains("error")) {
                    return CheckResult.correct();
                } else {
                    return CheckResult.wrong("An error message expected with input " +
                            "\"" + length + "\"");
                }
            }

            List<Integer> integers = expect(source).toContain(1).integers();
            source = "" + integers.get(0);

            if (source.length() != length) {
                return CheckResult.wrong("The output number of your program has " +
                        "an incorrect length (found " + source.length() + ")");
            }

            List<Integer> temp = stringToArrayOfNumbers(source);
            temp = new ArrayList<>(new LinkedHashSet<>(temp));

            if (temp.toArray().length != source.length()) {
                return CheckResult.wrong("Digits in the generated number are not unique.");
            }

            return CheckResult.correct();
        }

        private static List<Integer> stringToArrayOfNumbers(String array) {
            return Arrays.stream(array.split(""))
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/53/stages/289/implement#comment
status: Solved
record: 2
